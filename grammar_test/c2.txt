primaryExpression
    @Identifier
    @IntegerConstant
    @FloatingConstant
    @CharacterConstant
    @StringLiteral
    @( expression @)

argumentList
    assignmentExpression
    argumentList @, assignmentExpression

postfixExpression
    primaryExpression
    postfixExpression @( argumentList @)
    postfixExpression @( @)
    postfixExpression @[ expression @]
    postfixExpression @++
    postfixExpression @--

unaryExpression
    postfixExpression
    @++ unaryExpression
    @-- unaryExpression
    @& castExpression
    @* castExpression
    @+ castExpression
    @- castExpression
    @~ castExpression
    @! castExpression
    @sizeof @( unaryExpression @)

castExpression
    unaryExpression
    @( typeName @) castExpression

multiplicativeExpression
    castExpression
    multiplicativeExpression @* castExpression
    multiplicativeExpression @/ castExpression
    multiplicativeExpression @% castExpression

additiveExpression
    multiplicativeExpression
    additiveExpression @+ multiplicativeExpression
    additiveExpression @- multiplicativeExpression

shiftExpression
    additiveExpression
    shiftExpression @<< additiveExpression
    shiftExpression @>> additiveExpression

relationalExpression
    shiftExpression
    relationalExpression @< shiftExpression
    relationalExpression @<= shiftExpression
    relationalExpression @> shiftExpression
    relationalExpression @>= shiftExpression

equalityExpression
    relationalExpression
    equalityExpression @== relationalExpression
    equalityExpression @!= relationalExpression

andExpression
    equalityExpression
    andExpression @& equalityExpression

xorExpression
    andExpression
    xorExpression @^ andExpression

orExpression
    xorExpression
    orExpression @| xorExpression

logicalAndExpression
    orExpression
    logicalAndExpression @&& orExpression

logicalOrExpression
    logicalAndExpression
    logicalOrExpression @|| logicalAndExpression

conditionExpression
    logicalOrExpression
    logicalOrExpression @? expression @: conditionExpression

assignmentExpression
    conditionExpression
    unaryExpression @= assignmentExpression
    unaryExpression @*= assignmentExpression
    unaryExpression @+= assignmentExpression
    unaryExpression @-= assignmentExpression
    unaryExpression @/= assignmentExpression
    unaryExpression @%= assignmentExpression
    unaryExpression @<<= assignmentExpression
    unaryExpression @>>= assignmentExpression
    unaryExpression @|= assignmentExpression
    unaryExpression @&= assignmentExpression
    unaryExpression @^= assignmentExpression

expression
    assignmentExpression
    expression @, assignmentExpression

typeName
    @int
    @long
    @float
    @double
    @void
    @char



breakStatement
    @break @;

continueStatement
    @continue @;

gotoStatement
    @goto @Identifier @;

returnStatement
    @return expression @;

labeledStatement
    @Identifier @: statement

compoundStatement
    @{ blockItemList @}
    @{ @}

blockItemList
    blockItem
    blockItemList blockItem

blockItem
    statement
    declaration

expressionStatement
    expression @;

selectionStatement
    //@if @( expression @) statement
    @if @( expression @) statement @else statement

iterationStatement
    @for @( expression @; expression @; expression @) statement

statement
    breakStatement
    gotoStatement
    continueStatement
    returnStatement
    expressionStatement
    iterationStatement
    selectionStatement
    compoundStatement
    labeledStatement

declarator
    @Identifier
    @( declarator @)
    declarator @[ assignmentExpression @]
    declarator @( parameterTypeList @)
    declarator @( @)

parameterTypeList
    parameterDeclaration
    parameterTypeList @, parameterDeclaration

parameterDeclaration
    typeName declarator

initializer
    assignmentExpression
    @{ initializerList @}

initializerList
    initializer
    initializerList @, initializer

initDeclaratorList
    initDeclarator
    initDeclaratorList @, initDeclarator

initDeclarator
    declarator
    declarator @= initializer

declaration
    typeName initDeclaratorList @;

functionDefinition
    typeName declarator compoundStatement

externalDeclaration
    functionDefinition
    declaration

translationUnit
    externalDeclaration
    translationUnit externalDeclaration

ORIGIN S
    translationUnit